# includes\12-Malware.ps1
# Malware – STUBS ONLY (no working commands included)

function Invoke-Malware {
    param([hashtable]$Config)

    Write-Host "[Malware] Start" -ForegroundColor Cyan

    MLW-Clear-DefenderExclusionPaths      -Config $Config
    MLW-Clear-DefenderExclusionExtensions -Config $Config
    MLW-Run-DefenderScan                  -Config $Config

    Write-Host "[Malware] Done" -ForegroundColor Cyan
}

function MLW-Clear-DefenderExclusionPaths {
<#
.EXPLANATION
Clear all Microsoft Defender exclusion **paths**. Print a simple confirmation when done.

.AI_PROMPT
Return only PowerShell code (no markdown, no comments, no extra text). Define:

function MLW-Clear-DefenderExclusionPaths {
  param([hashtable]$Config)

  Requirements:
  - Get current exclusion paths via Defender preference cmdlet.
  - Ignore null/empty entries.
  - For each path, remove it using the Defender removal cmdlet.
  - Suppress noisy errors so the loop continues if a removal fails.
  - Print: "Windows Defender exclusion path cleared"
}
#>
    param([hashtable]$Config)
    # TODO
}

function MLW-Clear-DefenderExclusionExtensions {
<#
.EXPLANATION
Clear all Microsoft Defender exclusion **file extensions**. Print a simple confirmation when done.

.AI_PROMPT
Return only PowerShell code (no markdown, no comments, no extra text). Define:

function MLW-Clear-DefenderExclusionExtensions {
  param([hashtable]$Config)

  Requirements:
  - Get current exclusion extensions via Defender preference cmdlet.
  - Ignore null/empty entries.
  - For each extension, remove it using the Defender removal cmdlet.
  - Suppress noisy errors so the loop continues if a removal fails.
  - Print: "Extension exclusion removed from Windows Defender"
}
#>
    param([hashtable]$Config)
    # TODO
}

function MLW-Run-DefenderScan {
<#
.EXPLANATION
Run a **Quick Scan** with Microsoft Defender, then prompt the user "Would you like to perform a full scan? (y/n)".
If the answer is 'y' (case-insensitive), run a **Full Scan**; otherwise do nothing further.
Show status lines before/after the quick scan and before the full scan if chosen.

.AI_PROMPT
Return only PowerShell code (no markdown, no comments, no extra text). Define:

function MLW-Run-DefenderScan {
  param([hashtable]$Config)

  Requirements:
  - Print: "Performing a Windows Defender Quick Scan..."
  - Start a Defender QuickScan using the appropriate cmdlet.
  - After completion, print: "Quick Scan Complete."
  - Prompt: "Would you like to perform a full scan? (y/n)" and read the response.
  - If the response is exactly 'y' or 'Y', print: "Performing a Windows Defender Full Scan..." then start a FullScan.
  - Do not run a full scan for any other response.
}
#>
    param([hashtable]$Config)
    # TODO
}
